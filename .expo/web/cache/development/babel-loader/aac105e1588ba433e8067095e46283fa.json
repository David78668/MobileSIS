{"ast":null,"code":"import React from 'react';\nimport HomeNewGradeBox from \"./HomeNewGradeBox\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport data from \"../gradeData.json\";\nvar date = new Date();\nvar windowWidth = Dimensions.get('window').width;\nvar windowHeight = Dimensions.get('window').height;\nvar containerHeight = windowHeight * 0.18;\n\nfunction daysInMonth(month, year) {\n  return new Date(year, month, 0).getDate();\n}\n\nfunction convertToDays(date) {\n  var splitDate = date.split('-');\n  var days1 = Number(splitDate[0]) * 365 + daysInMonth(Number(splitDate[1]), Number(splitDate[0]));\n  return Number(days1 + Number(splitDate[2]));\n}\n\nexport default function HomeNewGrades() {\n  var grades = [];\n  var year = date.getFullYear() - 2000;\n  var currentDate = convertToDays(year + \"-\" + date.getMonth() + \"-\" + date.getDate());\n\n  for (var i = 0; i < data.Subjects.length; i++) {\n    for (var k = 0; k < data.Subjects[i].Marks.length; k++) {\n      if (currentDate - convertToDays(data.Subjects[i].Marks[k].Date) < 2) {\n        grades.push(HomeNewGradeBox({\n          subjectName: data.Subjects[i].ShortName,\n          grade: String(data.Subjects[i].Marks[k].Value),\n          date: String(data.Subjects[i].Marks[k].Date)\n        }));\n      }\n    }\n  }\n\n  var gradeAmount = grades.length;\n  return React.createElement(View, {\n    style: styles.container\n  }, React.createElement(ScrollView, {\n    style: styles.scrollView,\n    horizontal: true,\n    showsHorizontalScrollIndicator: false\n  }, grades));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flexDirection: \"row\",\n    height: containerHeight,\n    marginBottom: 0,\n    marginTop: 'auto',\n    borderRadius: 10,\n    marginLeft: \"5.9%\",\n    shadowColor: 'rgba(0, 0, 0, 0.1)',\n    shadowOffset: {\n      width: 0,\n      height: 0\n    },\n    shadowRadius: 10,\n    shadowOpacity: 1,\n    elevation: 1\n  },\n  scrollView: {\n    height: '100%'\n  }\n});","map":{"version":3,"sources":["C:/Users/strup/OneDrive/Plocha/KybernaSIs/mobilesis/components/HomeNewGrades.tsx"],"names":["React","HomeNewGradeBox","data","date","Date","windowWidth","Dimensions","get","width","windowHeight","height","containerHeight","daysInMonth","month","year","getDate","convertToDays","splitDate","split","days1","Number","HomeNewGrades","grades","getFullYear","currentDate","getMonth","i","Subjects","length","k","Marks","push","subjectName","ShortName","grade","String","Value","gradeAmount","styles","container","scrollView","StyleSheet","create","flexDirection","marginBottom","marginTop","borderRadius","marginLeft","shadowColor","shadowOffset","shadowRadius","shadowOpacity","elevation"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport HomeNewGradeBox from './HomeNewGradeBox';\r\nimport { ScrollView, StyleSheet, Text, View, Dimensions } from 'react-native';\r\nimport data from '../gradeData.json';\r\nimport Grades from '../Pages/Grades';\r\n\r\nconst date = new Date();\r\nconst windowWidth = Dimensions.get('window').width;\r\nconst windowHeight = Dimensions.get('window').height;\r\nconst containerHeight = windowHeight*0.18;\r\n\r\nfunction daysInMonth (month:number, year:number) {\r\n  return new Date(year, month, 0).getDate();\r\n}\r\n\r\nfunction convertToDays(date:string) {\r\n  let splitDate = date.split('-');\r\n  let days1 = Number(splitDate[0]) * 365 + daysInMonth(Number(splitDate[1]), Number(splitDate[0]));\r\n  return Number(days1 + Number(splitDate[2]))\r\n}\r\n\r\nexport default function HomeNewGrades() {\r\n  let grades = [];\r\n  let year = date.getFullYear() - 2000;\r\n  let currentDate = convertToDays(`${year}-${date.getMonth()}-${date.getDate()}`);\r\n  for(let i = 0; i < data.Subjects.length; i++){\r\n      for(let k=0; k < data.Subjects[i].Marks.length; k++){\r\n        if(currentDate - convertToDays(data.Subjects[i].Marks[k].Date) < 2){\r\n          grades.push(HomeNewGradeBox({\r\n            subjectName:data.Subjects[i].ShortName,\r\n            grade:String(data.Subjects[i].Marks[k].Value),\r\n            date:String(data.Subjects[i].Marks[k].Date),\r\n          }));\r\n        }\r\n    }\r\n  }\r\n  let gradeAmount = grades.length;\r\n  return (\r\n    \r\n    <View style={styles.container}>\r\n      \r\n      <ScrollView style={styles.scrollView} horizontal={true} showsHorizontalScrollIndicator={false}>\r\n        {grades}\r\n      </ScrollView>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n      flexDirection:\"row\",\r\n      height: containerHeight,\r\n      marginBottom:0,\r\n      marginTop:'auto',\r\n      borderRadius:10,\r\n      marginLeft: \"5.9%\",\r\n      shadowColor: 'rgba(0, 0, 0, 0.1)',\r\n      shadowOffset: {width: 0, height: 0},\r\n      shadowRadius: 10,\r\n      shadowOpacity: 1,\r\n      elevation:1,\r\n    },\r\n    scrollView:{\r\n      height:'100%',\r\n      \r\n    }\r\n    \r\n  })"]},"metadata":{},"sourceType":"module"}