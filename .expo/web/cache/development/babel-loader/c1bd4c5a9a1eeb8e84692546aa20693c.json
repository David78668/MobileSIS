{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Ionicons } from \"@expo/vector-icons\";\nimport React from 'react';\nexport default function App(item) {\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      select = _React$useState2[0],\n      setcheckBoxState = _React$useState2[1];\n\n  function toDate(date) {\n    var dd = date.split('-');\n    var final = new Date(dd[0], dd[1] - 1, dd[2]);\n    return final.getDay() + '. ' + final.toLocaleString('default', {\n      month: 'short'\n    }) + ' ' + final.getFullYear();\n  }\n\n  function Ich() {\n    if (select) {\n      return React.createElement(View, null, item.Marks.map(function (item) {\n        return React.createElement(View, {\n          style: {\n            flexDirection: 'row',\n            justifyContent: 'space-between',\n            alignItems: 'center',\n            paddingTop: 1,\n            paddingRight: 5\n          }\n        }, React.createElement(View, {\n          style: {\n            backgroundColor: \"#EB7221\",\n            height: 55,\n            width: 55,\n            justifyContent: 'center',\n            alignItems: 'center'\n          }\n        }, React.createElement(Text, {\n          style: {\n            fontSize: 30,\n            color: 'white'\n          }\n        }, item.Value)), React.createElement(Text, null, item.Name), React.createElement(View, {\n          style: {\n            flexDirection: 'column'\n          }\n        }, React.createElement(Text, {\n          style: {\n            fontSize: 20\n          }\n        }, toDate(item.Date)), React.createElement(Text, {\n          style: {\n            textAlign: 'center',\n            color: '#EB7221'\n          }\n        }, \"V\\xE1ha: \", item.Weight)));\n      }));\n    } else {\n      return React.createElement(View, null);\n    }\n  }\n\n  return React.createElement(View, {\n    style: styles.shadow\n  }, React.createElement(View, {\n    style: styles.container\n  }, React.createElement(Ionicons, {\n    color: 'white',\n    size: 27,\n    style: {\n      backgroundColor: \"#EB7221\",\n      padding: 5,\n      borderRadius: 12,\n      marginLeft: 10\n    },\n    name: \"calculator-outline\"\n  }), React.createElement(View, {\n    style: {\n      flexDirection: 'column',\n      marginLeft: 20\n    }\n  }, React.createElement(Text, {\n    style: {\n      fontSize: 16,\n      fontWeight: '600'\n    }\n  }, item.Name), React.createElement(Text, null, \"Pr\\u016Fm\\u011Br 2.00\")), React.createElement(View, {\n    style: {\n      marginLeft: 'auto',\n      flexDirection: 'row',\n      justifyContent: 'flex-end'\n    }\n  }, React.createElement(Text, {\n    style: {\n      paddingTop: 30\n    }\n  }, \"Zn\\xE1mky: \", item.Marks.length), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      select ? setcheckBoxState(false) : setcheckBoxState(true);\n    }\n  }, React.createElement(Ionicons, {\n    name: \"chevron-up-outline\",\n    color: \"#EB7221\",\n    size: 20\n  })))), Ich());\n}\nvar styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    justifyContent: 'flex-start',\n    alignItems: 'center',\n    padding: 5,\n    backgroundColor: 'white'\n  },\n  shadow: {\n    margin: 3,\n    width: 350,\n    borderRadius: 20,\n    overflow: 'hidden',\n    shadowColor: 'black',\n    shadowOffset: {\n      height: 1,\n      width: 5\n    },\n    shadowRadius: 20,\n    shadowOpacity: 0.25\n  }\n});","map":{"version":3,"sources":["C:/Users/strup/OneDrive/Plocha/KybernaSIs/mobilesis/components/Grade.tsx"],"names":["Ionicons","React","App","item","useState","select","setcheckBoxState","toDate","date","dd","split","final","Date","getDay","toLocaleString","month","getFullYear","Ich","Marks","map","flexDirection","justifyContent","alignItems","paddingTop","paddingRight","backgroundColor","height","width","fontSize","color","Value","Name","textAlign","Weight","styles","shadow","container","padding","borderRadius","marginLeft","fontWeight","length","StyleSheet","create","margin","overflow","shadowColor","shadowOffset","shadowRadius","shadowOpacity"],"mappings":"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","sourcesContent":["import { Button, StyleSheet, Text, TouchableOpacity, View } from 'react-native';\r\nimport {Ionicons} from \"@expo/vector-icons\"\r\nimport React from 'react';\r\n\r\nexport default function App(item:any) {\r\n    const [select, setcheckBoxState] = React.useState(false);\r\n    function toDate(date:any){\r\n        var dd = date.split('-');\r\n        var final = new Date(dd[0],dd[1] - 1 ,dd[2]);\r\n        return(final.getDay()+'. ' + final.toLocaleString('default', { month: 'short' }) + ' ' + final.getFullYear());\r\n    }\r\n        function Ich(){\r\n        if (select) {\r\n            return (\r\n                <View>\r\n                    {item.Marks.map((item:any) => (\r\n                        <View style={{flexDirection:'row',justifyContent:'space-between',alignItems:'center',paddingTop:1,paddingRight:5}}>\r\n                            <View style={{backgroundColor:\"#EB7221\",height:55,width:55,justifyContent:'center',alignItems:'center'}}><Text style={{fontSize:30,color:'white'}}>{item.Value}</Text></View>\r\n                            <Text>{item.Name}</Text>\r\n                            <View style={{flexDirection:'column'}}>\r\n                                <Text style={{fontSize:20}}>{toDate(item.Date)}</Text>\r\n                                <Text style={{textAlign:'center',color:'#EB7221'}}>Váha: {item.Weight}</Text>\r\n                            </View>\r\n                        </View>\r\n                    ))\r\n                }\r\n            </View>\r\n            );\r\n        }\r\n        else{\r\n            return(<View></View>)\r\n        }\r\n    }\r\nreturn (\r\n    <View style={styles.shadow}>\r\n        <View style={styles.container}>\r\n            <Ionicons color={'white'} size={27} style={{backgroundColor:\"#EB7221\",padding:5,borderRadius:12,marginLeft:10}} name=\"calculator-outline\"></Ionicons>\r\n            <View style={{flexDirection:'column',marginLeft:20}}>\r\n                <Text style={{fontSize:16,fontWeight:'600'}}>{item.Name}</Text>\r\n                <Text>Průměr 2.00</Text>\r\n            </View>\r\n            <View style={{marginLeft:'auto',flexDirection: 'row', justifyContent: 'flex-end'}}>\r\n                <Text style={{paddingTop:30}}>Známky: {item.Marks.length}</Text>\r\n                <TouchableOpacity  onPress={()=>{select?setcheckBoxState(false):setcheckBoxState(true)}}>\r\n                    <Ionicons name='chevron-up-outline' color=\"#EB7221\" size={20}></Ionicons>\r\n                </TouchableOpacity>\r\n            </View>\r\n        </View>\r\n        {Ich()}\r\n    </View>\r\n\r\n);\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\ncontainer: {\r\n    flexDirection:'row',\r\n    justifyContent:'flex-start',\r\n    alignItems:'center',\r\n    padding:5,\r\n    backgroundColor:'white',\r\n},\r\nshadow:{\r\n    margin:3,\r\n    width:350,\r\n    borderRadius:20,\r\n    overflow:'hidden',\r\n    shadowColor:'black',\r\n    shadowOffset:{height:1,width:5},\r\n    shadowRadius:20,\r\n    shadowOpacity:0.25\r\n}\r\n});\r\n"]},"metadata":{},"sourceType":"module"}