{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useRef } from 'react';\nimport CustomPaging from \"./Paging\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Carousel from 'react-native-snap-carousel';\nimport CarouselCardItem, { SLIDER_WIDTH, ITEM_WIDTH } from \"./CarouselCardItem\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport data from \"../data.json\";\nvar schedule = data.Days[0].Lessons;\nvar windowWidth = Dimensions.get('window').width;\nvar windowHeight = Dimensions.get('window').height;\nvar date = new Date();\n\nfunction getCurrentClass(duration, data) {\n  for (var i = 0; i < data.length; i++) {\n    var splitTime = data[i].StartTime.split(':');\n    var hours = Number(splitTime[0]);\n    var minutes = Number(splitTime[1]);\n    var startTime = hours * 60 + minutes;\n    var endTime = startTime + duration;\n    var currentTime = date.getHours() * 60 + date.getMinutes();\n\n    if (currentTime < startTime) {\n      return i;\n    }\n  }\n\n  return 0;\n}\n\nvar CarouselCards = function CarouselCards() {\n  var _React$useState = React.useState(getCurrentClass(45, schedule)),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      currentIndex = _React$useState2[0],\n      setIndex = _React$useState2[1];\n\n  var settings = {\n    onSnapToItem: function onSnapToItem(index) {\n      return setIndex(index);\n    }\n  };\n  var days = [\"Neděle\", \"Pondělí\", \"Úterý\", \"Středa\", \"Čtvrtek\", \"Pátek\", \"Sobota\"];\n  var months = [\"Leden\", \"Únor\", \"Březen\", \"Duben\", \"Květen\", \"Červen\", \"Červenec\", \"Srpen\", \"Září\", \"Říjen\", \"Listopad\", \"Prosinec\"];\n  var c = useRef(null);\n  var index = getCurrentClass(45, schedule);\n  return React.createElement(ImageBackground, {\n    source: require(\"../assets/carousel.png\"),\n    resizeMode: \"cover\",\n    style: styles.container\n  }, React.createElement(View, {\n    style: styles.contentHolder\n  }, React.createElement(Text, {\n    style: styles.header\n  }, days[date.getDay()], \", \", date.getDate(), \". \", months[date.getMonth()]), React.createElement(Carousel, _extends({\n    layout: \"stack\",\n    layoutCardOffset: 0,\n    ref: c,\n    data: schedule,\n    renderItem: CarouselCardItem,\n    sliderWidth: SLIDER_WIDTH,\n    itemWidth: ITEM_WIDTH,\n    inactiveSlideShift: 0,\n    firstItem: currentIndex,\n    useScrollView: true\n  }, settings))), React.createElement(CustomPaging, {\n    data: schedule,\n    activeSlide: currentIndex\n  }));\n};\n\nvar styles = StyleSheet.create({\n  header: {\n    flexDirection: 'row',\n    width: '100%',\n    marginBottom: 10,\n    fontWeight: \"700\",\n    color: \"#FFFFFF\",\n    fontSize: 21\n  },\n  container: {\n    opacity: 15,\n    width: \"100%\",\n    backgroundColor: '#E9671E',\n    justifyContent: 'flex-end',\n    alignItems: 'center',\n    height: windowHeight * 0.37\n  },\n  contentHolder: {\n    width: windowWidth - 44,\n    justifyContent: 'flex-end',\n    alignItems: 'center'\n  }\n});\nexport default CarouselCards;","map":{"version":3,"sources":["C:/Users/strup/OneDrive/Plocha/KybernaSIs/mobilesis/components/NextSubjectCarousel.tsx"],"names":["React","useRef","CustomPaging","Carousel","CarouselCardItem","SLIDER_WIDTH","ITEM_WIDTH","data","schedule","Days","Lessons","windowWidth","Dimensions","get","width","windowHeight","height","date","Date","getCurrentClass","duration","i","length","splitTime","StartTime","split","hours","Number","minutes","startTime","endTime","currentTime","getHours","getMinutes","CarouselCards","useState","currentIndex","setIndex","settings","onSnapToItem","index","days","months","c","require","styles","container","contentHolder","header","getDay","getDate","getMonth","StyleSheet","create","flexDirection","marginBottom","fontWeight","color","fontSize","opacity","backgroundColor","justifyContent","alignItems"],"mappings":"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","sourcesContent":["import React, { useRef } from 'react'\r\nimport CustomPaging from './Paging'\r\nimport { View, StyleSheet, ImageBackground } from \"react-native\"\r\nimport { Text } from 'react-native'\r\nimport Carousel, { CarouselProperties } from 'react-native-snap-carousel'\r\nimport CarouselCardItem, { SLIDER_WIDTH, ITEM_WIDTH } from './CarouselCardItem'\r\nimport { Dimensions } from 'react-native'\r\nimport data from '../data.json'\r\n\r\nlet schedule = data.Days[0].Lessons;\r\n//The carousel itself, including the date and pagination\r\nconst windowWidth = Dimensions.get('window').width;\r\nconst windowHeight = Dimensions.get('window').height;\r\nconst date = new Date();\r\n\r\n\r\nfunction getCurrentClass(duration: number, data:any) {\r\n \r\n  for(let i = 0; i < data.length; i++){\r\n    let splitTime = data[i].StartTime.split(':')   \r\n    let hours = Number(splitTime[0]);\r\n    let minutes = Number(splitTime[1]);\r\n    let startTime = hours * 60 + minutes;\r\n    let endTime = startTime + duration;\r\n    let currentTime = date.getHours() * 60 + date.getMinutes();\r\n    if (currentTime < startTime) {\r\n      return i;\r\n    }\r\n  }\r\n  \r\n  return 0;\r\n}\r\n\r\nconst CarouselCards = () => {\r\n  let [currentIndex, setIndex] = React.useState(getCurrentClass(45,schedule));\r\n  \r\n  const settings = {\r\n    onSnapToItem: (index: any) => setIndex(index),\r\n  };\r\n  const days = [\"Neděle\", \"Pondělí\", \"Úterý\", \"Středa\", \"Čtvrtek\", \"Pátek\", \"Sobota\", ]\r\n  const months = [\"Leden\", \"Únor\", \"Březen\", \"Duben\", \"Květen\", \"Červen\", \"Červenec\", \"Srpen\", \"Září\", \"Říjen\", \"Listopad\", \"Prosinec\"]\r\n  const c = useRef(null);\r\n  const index = getCurrentClass(45, schedule);\r\n\r\n  return (\r\n    <ImageBackground source={require(\"../assets/carousel.png\")} resizeMode='cover' style={styles.container}>\r\n      <View style={styles.contentHolder}>\r\n        <Text style={styles.header}>{days[date.getDay()]}, {date.getDate()}. {months[date.getMonth()]}</Text>\r\n        <Carousel\r\n          layout=\"stack\"\r\n          layoutCardOffset={0}\r\n          ref={c}\r\n          data={schedule}\r\n          renderItem={CarouselCardItem}\r\n          sliderWidth={SLIDER_WIDTH}\r\n          itemWidth={ITEM_WIDTH}\r\n          inactiveSlideShift={0}\r\n          firstItem={currentIndex}\r\n          useScrollView={true}\r\n          \r\n          {...settings}\r\n        />\r\n      </View>\r\n      <CustomPaging data={schedule} activeSlide={currentIndex}/>\r\n    </ImageBackground>\r\n  )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  header: {\r\n    flexDirection: 'row',\r\n    width: '100%',\r\n    marginBottom: 10,\r\n    fontWeight: \"700\",\r\n    color: \"#FFFFFF\",\r\n    fontSize: 21,\r\n  },\r\n\r\n  container: {\r\n    opacity: 15,\r\n    width: \"100%\",\r\n    backgroundColor: '#E9671E',\r\n    justifyContent: 'flex-end',\r\n    alignItems: 'center',\r\n    height: windowHeight * 0.37,\r\n  },\r\n\r\n  contentHolder: {\r\n    width: windowWidth - 44,\r\n    justifyContent: 'flex-end',\r\n    alignItems: 'center',\r\n  }\r\n\r\n});\r\n\r\nexport default CarouselCards\r\n"]},"metadata":{},"sourceType":"module"}