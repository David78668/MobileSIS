{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport LessonView from \"../components/Lesson\";\nexport default function Schedule() {\n  var testdata = require(\"../testData.json\");\n\n  var _React$useState = React.useState(0),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      page = _React$useState2[0],\n      setPage = _React$useState2[1];\n\n  return React.createElement(View, {\n    style: styles.container\n  }, React.createElement(ImageBackground, {\n    source: require(\"../assets/carousel.png\"),\n    resizeMode: \"cover\",\n    style: styles.image\n  }, React.createElement(View, {\n    style: {\n      alignItems: 'center'\n    }\n  }, React.createElement(Text, {\n    style: styles.HeadText\n  }, \"Rozvrh\"), React.createElement(View, {\n    style: styles.view\n  }, testdata.Days.map(function (item, index) {\n    return React.createElement(TouchableOpacity, {\n      onPress: function onPress() {\n        setPage(index);\n      },\n      style: styles.column\n    }, React.createElement(Text, {\n      style: styles.lessonsText\n    }, new Date(item.Date).getDate(), \". \", new Date(item.Date).toLocaleDateString('locale', {\n      weekday: 'short'\n    }).charAt(0).toUpperCase() + new Date(item.Date).toLocaleDateString('locale', {\n      weekday: 'short'\n    }).slice(1)), page == index ? React.createElement(View, {\n      style: {\n        height: item.Lessons.length * 12,\n        width: 50,\n        backgroundColor: \"white\",\n        borderRadius: 10,\n        opacity: 0.8\n      }\n    }) : React.createElement(View, {\n      style: {\n        height: item.Lessons.length * 12,\n        width: 50,\n        backgroundColor: \"white\",\n        borderRadius: 10,\n        opacity: 0.5\n      }\n    }), React.createElement(Text, {\n      style: styles.lessonsText\n    }, item.Lessons[0].StartTime), React.createElement(Text, {\n      style: styles.lessonsText\n    }, item.Lessons[item.Lessons.length - 1].StartTime));\n  })))), React.createElement(View, {\n    style: {\n      borderRadius: 15,\n      overflow: 'hidden',\n      margin: 20\n    }\n  }, React.createElement(ScrollView, {\n    style: {\n      height: 500\n    }\n  }, testdata.Days[page].Lessons.map(function (item) {\n    return React.createElement(View, null, LessonView(item));\n  }))));\n}\nvar styles = StyleSheet.create({\n  container: {\n    backgroundColor: '#e5e5e5'\n  },\n  image: {\n    justifyContent: 'center'\n  },\n  HeadText: {\n    padding: 10,\n    color: \"white\",\n    fontWeight: \"700\",\n    fontSize: 30\n  },\n  column: {\n    padding: 5\n  },\n  lessonsText: {\n    textAlign: 'center',\n    maxWidth: 50,\n    color: \"white\",\n    opacity: 0.8,\n    fontWeight: '600'\n  },\n  view: {\n    flexDirection: 'row'\n  }\n});","map":{"version":3,"sources":["C:/Users/strup/OneDrive/Plocha/KybernaSIs/mobilesis/pages/Schedule.tsx"],"names":["React","LessonView","Schedule","testdata","require","useState","page","setPage","styles","container","image","alignItems","HeadText","view","Days","map","item","index","column","lessonsText","Date","getDate","toLocaleDateString","weekday","charAt","toUpperCase","slice","height","Lessons","length","width","backgroundColor","borderRadius","opacity","StartTime","overflow","margin","StyleSheet","create","justifyContent","padding","color","fontWeight","fontSize","textAlign","maxWidth","flexDirection"],"mappings":"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","sourcesContent":["import { StatusBar } from 'expo-status-bar';\r\nimport React from 'react';\r\nimport { StyleSheet, Text, View,ImageBackground, TouchableOpacity, ScrollView} from 'react-native';\r\nimport LessonView from '../components/Lesson'\r\n\r\nexport default function Schedule() {\r\n  const testdata = require(\"../testData.json\");\r\n  const [page,setPage] = React.useState(0);\r\n  return (\r\n    <View style={styles.container}>\r\n      <ImageBackground source={require('../assets/carousel.png')} resizeMode=\"cover\" style={styles.image}>\r\n        <View style={{alignItems:'center'}}>\r\n          <Text style={styles.HeadText}>Rozvrh</Text>\r\n          <View style={styles.view}>\r\n\r\n            { testdata.Days.map((item:any,index:number) => (\r\n              <TouchableOpacity onPress={()=>{setPage(index)}} style={styles.column}>\r\n                <Text style={styles.lessonsText}>{new Date(item.Date).getDate()}. {new Date(item.Date).toLocaleDateString('locale', { weekday: 'short' }).charAt(0).toUpperCase() + new Date(item.Date).toLocaleDateString('locale', { weekday: 'short' }).slice(1)}</Text>\r\n                  {page == index?<View style={{height:item.Lessons.length*12,width:50,backgroundColor:\"white\",borderRadius:10,opacity:0.8}}></View>:<View style={{height:item.Lessons.length*12,width:50,backgroundColor:\"white\",borderRadius:10,opacity:0.5}}></View>}\r\n                  <Text style={styles.lessonsText}>{item.Lessons[0].StartTime}</Text>\r\n                  <Text style={styles.lessonsText}>{(item.Lessons[item.Lessons.length-1].StartTime)}</Text>\r\n              </TouchableOpacity>\r\n            ))}\r\n            \r\n          </View>\r\n        </View>\r\n      </ImageBackground>\r\n      <View style={{borderRadius:15,overflow:'hidden',margin:20}}>\r\n        <ScrollView style={{height:500}}>\r\n        {testdata.Days[page].Lessons.map((item:any)=>(\r\n        <View>\r\n          {LessonView(item)}\r\n        </View>\r\n        ))}\r\n        </ScrollView>\r\n      </View>\r\n    </View>\r\n\r\n\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    \r\n    backgroundColor: '#e5e5e5',\r\n  },\r\n  image: {\r\n    justifyContent:'center',\r\n  },\r\n  HeadText:{\r\n    padding:10,\r\n    color:\"white\",\r\n    fontWeight:\"700\",\r\n    fontSize:30,\r\n  },\r\n  column:{\r\n    padding:5\r\n},\r\nlessonsText:{\r\n    textAlign:'center',\r\n    maxWidth:50,\r\n    color:\"white\",\r\n    opacity:0.8,\r\n    fontWeight:'600'\r\n},\r\nview:{\r\n  flexDirection:'row',\r\n}\r\n\r\n});\r\n"]},"metadata":{},"sourceType":"module"}